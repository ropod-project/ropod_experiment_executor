#!/usr/bin/env python
import rospy
from ropod_ros_msgs.msg import ExecuteCommand, PauseCommand,\
                               ContinueCommand, CancelCommand

from ropod_experiment_executor.command_executor import CommandExecutor

class ExperimentExecutorInterface(object):
    def __init__(self):
        command_config_file = rospy.get_param('~command_config_file', '')
        self.command_executor = CommandExecutor(command_config_file)

        execute_cmd_topic = rospy.get_param('~execute_cmd_topic', '/ropod/execute_cmd')
        pause_cmd_topic = rospy.get_param('~pause_cmd_topic', '/ropod/pause_cmd')
        continue_cmd_topic = rospy.get_param('~continue_cmd_topic', '/ropod/continue_cmd')
        cancel_cmd_topic = rospy.get_param('~cancel_cmd_topic', '/ropod/cancel_cmd')

        self.execute_cmd_sub = rospy.Subscriber(execute_cmd_topic,
                                                ExecuteCommand,
                                                self.execute_command)
        self.pause_cmd_sub = rospy.Subscriber(pause_cmd_topic,
                                              PauseCommand,
                                              self.pause_command)
        self.continue_cmd_sub = rospy.Subscriber(continue_cmd_topic,
                                                 ContinueCommand,
                                                 self.continue_command)
        self.cancel_cmd_sub = rospy.Subscriber(cancel_cmd_topic,
                                               CancelCommand,
                                               self.cancel_command)

    def execute_command(self, msg):
        self.command_executor.execute_command(msg.command_name)

    def pause_command(self, msg):
        self.command_executor.pause_command(msg.command_name)

    def continue_command(self, msg):
        self.command_executor.continue_command(msg.command_name)

    def cancel_command(self, msg):
        self.command_executor.cancel_command(msg.command_name)

if __name__ == '__main__':
    rospy.init_node('experiment_executor')
    executor_interface = ExperimentExecutorInterface()
    rospy.spin()
